{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fnil\fcharset0 HelveticaNeue-Bold;\f4\fnil\fcharset0 .SFNS-Regular_wdth_opsz110000_GRAD_wght2580000;\f5\fnil\fcharset0 Monaco;
}
{\colortbl;\red255\green255\blue255;\red42\green49\blue64;\red13\green13\blue13;\red42\green49\blue64;
\red255\green255\blue255;\red0\green0\blue0;\red156\green155\blue176;\red13\green13\blue13;\red14\green18\blue29;
}
{\*\expandedcolortbl;;\cssrgb\c21569\c25490\c31765;\cssrgb\c5882\c5882\c5882;\cssrgb\c21569\c25490\c31765;
\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;\cssrgb\c67451\c67451\c74510;\cssrgb\c5882\c5882\c5882;\cssrgb\c6667\c9412\c15294;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid101\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid201\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid202\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid401\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid601\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid701\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh10140\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs36 \cf0 Q. What is Java
\f1\b0\fs24 \
\pard\pardeftab720\partightenfactor0

\f2\fs32 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Java is a high-level, object-oriented, and general-purpose programming language that was originally developed by Sun Microsystems in 1995. It is designed to be platform-independent, which means that Java programs can run on any device that has a Java Virtual Machine (JVM) installed, regardless of the underlying hardware and operating system.\

\b Q. How java get the name java
\b0 \
\pard\pardeftab720\partightenfactor0
\cf2 The name "Java" for the programming language and platform has an interesting origin. Originally, it was called "Oak" after the tree outside the office of one of the creators, James Gosling, at Sun Microsystems. However, there was already a programming language with that name, so they had to choose a new one.\
\
\pard\pardeftab720\partightenfactor0

\f3\b \cf3 \outl0\strokewidth0 Q. Java is a platform or language\
\pard\pardeftab720\sa400\partightenfactor0

\f2\b0 \cf4 Java is both a programming language and a platform.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f4\b \cf4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Java as a Programming Language:
\f2\b0  It provides the syntax, rules, and tools for developing software.\
\ls1\ilvl0
\f4\b \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Java as a Platform:
\f2\b0  It refers to the Java platform or Java Runtime Environment (JRE), which includes the Java Virtual Machine (JVM) and a set of libraries. The platform allows Java programs to run on various devices without modification, following the "Write Once, Run Anywhere" (WORA) principle.\
\pard\tx720\pardeftab720\partightenfactor0

\f3\b \cf4 Q. What is JVM 
\f2\b0 \
\pard\pardeftab720\partightenfactor0
\cf2 \outl0\strokewidth0 \strokec2 JVM stands for "Java Virtual Machine." It's an integral part of the Java Runtime Environment (JRE) and is responsible for executing Java bytecode.\cf4 \outl0\strokewidth0 \
\pard\tx720\pardeftab720\partightenfactor0

\b \cf2 \outl0\strokewidth0 \strokec2 Q. How to compile java code
\b0 \
Compile: 
\f5\fs28 \cf5 \cb6 \strokec5 javac MyProgram.java\
Run java MyProgram
\f2\fs32 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0

\b \cf2 Q. OOP and its features in Java
\b0 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf2 \strokec2 Object-oriented programming (OOP) in Java is a paradigm where code is organized around objects, combining data (attributes) and behaviors (methods) into reusable and modular units.\
\pard\pardeftab720\qc\partightenfactor0

\fs18 \cf7 \strokec7 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f4\b\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Encapsulation:
\f2\b0  Bundling data and methods that operate on the data within a class.\
\ls2\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Inheritance:
\f2\b0  Mechanism for creating a new class using properties and behaviors of an existing class.\
\ls2\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Polymorphism:
\f2\b0  Ability of objects to take on multiple forms, often achieved through method overriding.\
\ls2\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Abstraction:
\f2\b0  Simplifying complex systems by representing essential features and hiding unnecessary details.\
\pard\pardeftab720\partightenfactor0
\cf2 \strokec2 \

\b Q. Difference between Java and C++
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Memory Management:
\f2\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Java:
\f2\b0  Automatic garbage collection, no manual memory management.\
\ls3\ilvl1
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C++:
\f2\b0  Requires manual memory management using new and delete.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Platform Independence:
\f2\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Java:
\f2\b0  Platform-independent, runs on the Java Virtual Machine (JVM).\
\ls3\ilvl1
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C++:
\f2\b0  Compiled into machine-specific code, less platform-independent.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Object-Oriented Features:
\f2\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Java:
\f2\b0  Purely object-oriented, supports interfaces and abstract classes.\
\ls3\ilvl1
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C++:
\f2\b0  Supports both procedural and object-oriented programming, allows for more flexibility.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Security:
\f2\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Java:
\f2\b0  Emphasizes security with features like garbage collection and absence of explicit pointers.\
\ls3\ilvl1
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C++:
\f2\b0  Offers more control but requires careful manual memory management, potentially posing security risks.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Compilation:
\f2\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Java:
\f2\b0  Two-step compilation: bytecode and JVM interpretation or compilation at runtime.\
\ls3\ilvl1
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C++:
\f2\b0  Direct compilation into machine code.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Multiple Inheritance:
\f2\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Java:
\f2\b0  Supports multiple inheritance through interfaces.\
\ls3\ilvl1
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C++:
\f2\b0  Supports multiple inheritance through classes and interfaces.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Exception Handling:
\f2\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Java:
\f2\b0  Requires explicit try, catch, and finally blocks, with checked exceptions.\
\ls3\ilvl1
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C++:
\f2\b0  Supports try and catch blocks, allows functions to throw any type of exception.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Standard Libraries:
\f2\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Java:
\f2\b0  Rich standard libraries and frameworks.\
\ls3\ilvl1
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 C++:
\f2\b0  Comprehensive standard library, often relies on third-party libraries.\
\pard\pardeftab720\partightenfactor0
\cf2 \strokec2 \
\pard\pardeftab720\partightenfactor0

\b \cf2 Q. What is Class and Object 
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Class:
\f2\b0  It's like a blueprint that defines the structure and behavior of objects.\
\ls4\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Object:
\f2\b0  An instance of a class, representing a specific entity in your program.\
\pard\tx720\pardeftab720\partightenfactor0
\cf2 \

\f3\b\fs36 Q. \cf0 \strokec6 Access modifiers in java short simple one liners
\f2\b0\fs24 \
\pard\pardeftab720\qc\partightenfactor0

\fs18 \cf7 \strokec7 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0
\f4\b\fs32 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Public:
\f2\b0  Accessible from any class.\
\ls5\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Private:
\f2\b0  Accessible only within the same class.\
\ls5\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Protected:
\f2\b0  Accessible within the same package and by subclasses.\
\ls5\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Default (Package-private):
\f2\b0  Accessible within the same package.
\fs24 \cf5 \strokec5 \
\pard\pardeftab720\partightenfactor0

\fs32 \cf2 \strokec2 \

\b Q. Constructor and destructor 
\b0 \
In Java:\
\

\b Constructor:
\b0  It is a special method with the same name as the class, used to initialize object properties when an instance of the class is created.\
\
 \
  public class MyClass \{\
      public MyClass() \{\
          // Constructor code\
          System.out.println("Constructor called");\
      \}\
  \}\
 \
\

\b Destructor (or Finalizer):
\b0  Java doesn't have explicit destructors like some other languages. Instead, it relies on automatic garbage collection to reclaim memory. The `finalize()` method is a part of an object's lifecycle, but it's generally not used in everyday Java programming.\
\
\
  public class MyClass \{\
      // No explicit destructor, rely on garbage collection\
  \
      // Example of finalize method (not commonly used)\
      @Override\
      protected void finalize() throws Throwable \{\
          // Finalization code\
          System.out.println("Finalize method called");\
      \}\
  \}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs36 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 Q. What is Encapsulation
\f2\b0\fs32 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 Encapsulation in Java is about bundling data (variables) and the methods (functions) that operate on the data into a single unit called a class. It helps in hiding the internal details of how things work.\

\b Q. What is Abstraction
\b0 \
Abstraction in Java is the concept of simplifying complex systems by representing essential features and hiding unnecessary details.\

\b Q. What is polymorphism in java\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0

\b0 \cf4 \outl0\strokewidth0 Ability of objects to take on multiple forms, often achieved through method overriding\

\f3\b Q. What is abstract class in java
\f2\b0 \
\pard\pardeftab720\partightenfactor0
\cf2 \outl0\strokewidth0 \strokec2 An abstract class in Java is a class that cannot be instantiated and is meant to be subclassed. It may contain abstract methods (methods without a body) that must be implemented by its subclasses. Abstract classes allow you to define a common interface for a group of related classes while providing some default behavior.\
\pard\pardeftab720\partightenfactor0

\b \cf2 Q. How to access static member of a class a class \

\b0 public class Example \{\
    // Static variable\
    public static int staticVariable = 42;\
\
    // Static method\
    public static void staticMethod() \{\
        System.out.println("Static method called");\
    \}\
\}\
\
public class Main \{\
    public static void main(String[] args) \{\
        // Accessing static variable\
        int value = Example.staticVariable;\
        System.out.println("Static variable value: " + value);\
\
        // Calling static method\
        Example.staticMethod();\
    \}\
\}\
\

\b Q. How to access data member of a class in java
\b0 \
public class MyClass \{\
    // Data members\
    public int myInt;\
    public String myString;\
\
    // Constructor\
    public MyClass(int myInt, String myString) \{\
        this.myInt = myInt;\
        this.myString = myString;\
    \}\
\}\
\
public class Main \{\
    public static void main(String[] args) \{\
        // Creating an instance of MyClass\
        MyClass myObject = new MyClass(42, "Hello");\
\
        // Accessing data members\
        int intValue = myObject.myInt;\
        String stringValue = myObject.myString;\
\
        // Displaying values\
        System.out.println("myInt: " + intValue);\
        System.out.println("myString: " + stringValue);\
    \}\
\}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf2 \strokec2 \
\pard\pardeftab720\partightenfactor0

\b \cf2 \strokec2 Q. Define interface\

\b0 In Java, an interface is a blueprint for a set of methods that a class must implement.\
\

\b Q. What is JDBC in Java\

\b0 JDBC (Java Database Connectivity) is a Java API that enables Java applications to interact with relational databases, allowing the execution of SQL queries and managing database operations programmatically.\
\

\b Q. What is Garbage collection in Java\

\b0 Garbage collection in Java is an automatic process by which the Java Virtual Machine (JVM) reclaims memory occupied by objects that are no longer in use, preventing memory leaks and simplifying memory management for developers.\
\

\b Q. What is bytecode \

\b0 Bytecode in Java is a set of instructions generated by the Java compiler, representing the intermediate form of a Java program. It is platform-independent and is executed by the Java Virtual Machine (JVM) instead of native machine code, allowing Java programs to be portable across different platforms.\
\

\b Q. Febonacci series in java\

\b0 The Fibonacci series in Java is a sequence of numbers where each number is the sum of the two preceding ones, usually starting with 0 and 1.\
\

\b Q.
\f3 \cf4 \outl0\strokewidth0 What is multi-threading in java short and simple\
\pard\pardeftab720\partightenfactor0

\f2\b0 \cf2 \outl0\strokewidth0 \strokec2 Multithreading in Java is a concurrent execution of two or more threads, where each thread represents an independent flow of control within a program. It allows for the simultaneous execution of multiple tasks, improving program efficiency and responsiveness.\
\

\b Q. Bitwise operator in java\
\pard\pardeftab720\sa400\partightenfactor0

\b0 \cf2 \strokec2 Bitwise operators in Java perform operations on individual bits of integers. Here are the bitwise operators:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\f4\b \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 AND (
\f5\b0\fs28 &
\f4\b\fs32 ):
\f2\b0  Sets each bit to 1 if both bits are 1.\
\ls7\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 OR (
\f5\b0\fs28 |
\f4\b\fs32 ):
\f2\b0  Sets each bit to 1 if at least one of the corresponding bits is 1.\
\ls7\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 XOR (
\f5\b0\fs28 ^
\f4\b\fs32 ):
\f2\b0  Sets each bit to 1 if only one of the corresponding bits is 1.\
\ls7\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 NOT (
\f5\b0\fs28 ~
\f4\b\fs32 ):
\f2\b0  Inverts the bits, changing 1s to 0s and vice versa.\
\ls7\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Left Shift (
\f5\b0\fs28 <<
\f4\b\fs32 ):
\f2\b0  Shifts the bits to the left by a specified number of positions.\
\ls7\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Right Shift (
\f5\b0\fs28 >>
\f4\b\fs32 ):
\f2\b0  Shifts the bits to the right by a specified number of positions, filling with the sign bit (for signed numbers).\
\ls7\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Unsigned Right Shift (
\f5\b0\fs28 >>>
\f4\b\fs32 ):
\f2\b0  Shifts the bits to the right by a specified number of positions, filling with zeros.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\cf2 \

\b Q. Boolean data type in Java\
\pard\pardeftab720\sa400\partightenfactor0

\b0 \cf2 \strokec2 In Java, the 
\f5\fs28 \cf2 \strokec2 boolean
\f2\fs32 \cf2 \strokec2  data type is a simple data type representing a binary choice: true or false. It is commonly used for conditional expressions and logical operations.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0

\b \cf2 \strokec2 Q. Different data type in java\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls8\ilvl0
\f4 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 int:
\f2\b0  Integer data type for whole numbers.\
\ls8\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 double:
\f2\b0  Double-precision floating-point data type for decimal numbers.\
\ls8\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 char:
\f2\b0  Character data type for single characters.\
\ls8\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 boolean:
\f2\b0  Boolean data type for true or false values.\
\ls8\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 String:
\f2\b0  Represents sequences of characters (not a primitive type).\
\ls8\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 long:
\f2\b0  Long integer data type for larger whole numbers.\
\ls8\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 float:
\f2\b0  Single-precision floating-point data type.\
\ls8\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 byte:
\f2\b0  Byte data type for small integers.\
\ls8\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 short:
\f2\b0  Short integer data type for small whole numbers.\
\ls8\ilvl0
\f4\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Object:
\f2\b0  Base class for all Java classes (not a primitive type).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\cf2 \strokec2 \

\b Q. \cf8 \strokec8 Does java support pointers if no then what it does support
\b0 \cf2 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \strokec2 Java does not support explicit pointers like those found in languages such as C or C++. Instead, Java uses references to objects. In Java, you manipulate objects through references, but you do not have direct access to memory addresses or manual memory management.\
\

\b Q. \cf8 \strokec8 how to display a message in java\

\b0 \cf2 \strokec2 In Java, you can display a message on the console using the 
\f5\fs21 \cf0 \strokec6 System.out.println()
\f2\fs32 \cf2 \strokec2  method. Here's a simple example:\
\

\b Q. What is main function in java\

\b0 In Java, the 
\f5\fs21 \cf0 \strokec6 main
\f2\fs32 \cf2 \strokec2  function is the entry point for the execution of a Java program. It's where the program starts running. The 
\f5\fs21 \cf0 \strokec6 main
\f2\fs32 \cf2 \strokec2  function has a specific signature:\
\
public class MyClass \{\
    public static void main(String[] args) \{\
        // Program logic goes here\
    \}\
\}\
\

\b Q. What is AWT package in Java
\b0 \
In Java, the AWT stands for "Abstract Window Toolkit." The AWT is a set of APIs (Application Programming Interfaces) provided by Java for creating graphical user interfaces (GUIs) and handling various events such as button clicks and mouse actions.\
\

\b Q. What is layout in java
\b0 \
\pard\pardeftab720\partightenfactor0

\fs24 \cf2 \strokec2 In Java, a layout refers to the arrangement and positioning of GUI (Graphical User Interface) components within a container, such as a panel or frame. Layout managers in Java help define how components like buttons, text fields, and labels are organized and displayed on the screen, ensuring a consistent and visually appealing user interface. Common layout managers include 
\f5\fs21 \cf9 \strokec9 FlowLayout
\f2\fs24 \cf2 \strokec2 , 
\f5\fs21 \cf9 \strokec9 BorderLayout
\f2\fs24 \cf2 \strokec2 , 
\f5\fs21 \cf9 \strokec9 GridLayout
\f2\fs24 \cf2 \strokec2 , and 
\f5\fs21 \cf9 \strokec9 BoxLayout
\f2\fs24 \cf2 \strokec2 .\
\

\b Q. What is metadata in java
\b0 \
\pard\pardeftab720\partightenfactor0

\fs32 \cf2 \strokec2 In Java, metadata refers to additional information about data, classes, methods, or other program elements.
\fs24 \cf2 \strokec2 \
\pard\pardeftab720\qc\partightenfactor0

\fs18 \cf7 \strokec7 \
\
\pard\pardeftab720\partightenfactor0

\b\fs24 \cf6 Q. What is Swing in java
\b0 \cf7 \
\pard\pardeftab720\partightenfactor0

\fs32 \cf2 \strokec2 Swing is a GUI (Graphical User Interface) toolkit for Java that provides a rich set of components for building desktop applications. It is part of the Java Foundation Classes (JFC) and is designed to be lightweight, flexible, and platform-independent. Swing allows developers to create sophisticated and interactive graphical user interfaces in Java.
\fs24 \cf7 \strokec7 \
\pard\pardeftab720\partightenfactor0
\cf0 \strokec6 \
\pard\pardeftab720\partightenfactor0

\fs32 \cf2 \strokec2 \
}